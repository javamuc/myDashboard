name: CI/CD Pipeline

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run frontend tests
        run: npm run test

      - name: Run backend tests
        run: |
          chmod +x mvnw
          ./mvnw clean verify

      - name: Build production package
        run: ./mvnw package -Pprod -DskipTests

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: myDashboard
          path: target/*.jar
          retention-days: 1

  deploy:
    name: Deploy to Production
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: myDashboard
          path: ./

      - name: List files for debugging
        run: ls -la

      - name: Deploy
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: deployer
          key: ${{ secrets.SSH_KEY }}
          source: '*.jar'
          target: '/opt/app/'

      - name: Execute deployment script
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: deployer
          key: ${{ secrets.SSH_KEY }}
          script: |
            /opt/app/deploy.sh ${{ github.sha }}
